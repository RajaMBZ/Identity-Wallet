version: 2

jobs:
    'unit-test':
        docker: &DOCKERIMAGE
            - image: circleci/node:8.11.3-stretch-browsers
        steps:
            - checkout
            - attach_workspace:
                  at: /tmp/linux
            - restore_cache:
                  name: Restore Yarn Package Cache
                  keys:
                      - yarn-packages-{{ .Branch }}-{{ checksum "yarn.lock" }}
                      - yarn-packages-{{ .Branch }}
                      - yarn-packages-master
                      - yarn-packages-
            - run:
                  name: Install OS Dependecies
                  command: |
                      sudo apt-get update
                      sudo apt-get install libudev-dev
                      sudo apt-get install libusb-1.0-0 libusb-1.0-0-dev libudev-dev
            - run:
                  name: Install Node Packages
                  command: yarn
            - save_cache:
                  name: Save Yarn Package Cache
                  key: yarn-packages-{{ .Branch }}-{{ checksum "yarn.lock" }}
                  paths:
                      - node_modules/
            - run:
                  name: Unit Tests
                  command: yarn test:unit
    'build-mac':
        macos:
            xcode: '9.0'
        steps:
            - checkout
            - attach_workspace:
                  at: /tmp/mac
            - restore_cache:
                  name: Restore Yarn Package Cache
                  keys:
                      - yarn-packages-mac-{{ .Branch }}-{{ checksum "yarn.lock" }}
                      - yarn-packages-mac-{{ .Branch }}
                      - yarn-packages-mac-master
                      - yarn-packages-mac-
            - run:
                  name: Upgrade Node
                  command: brew upgrade node@8
            - run:
                  name: Upgrade Yarn
                  command: brew upgrade yarn
            - run:
                  name: Add Read Access to yarn config
                  command: |
                      sudo mkdir ~/.config
                      sudo chown -R $USER:$GROUP ~/.config
            - run:
                  name: Install Gulp
                  command: sudo npm i -g gulp-cli
            - run:
                  name: Install Node Packages
                  command: yarn
            - save_cache:
                  name: Save Yarn Package Cache
                  key: yarn-packages-mac-{{ .Branch }}-{{ checksum "yarn.lock" }}
                  paths:
                      - node_modules/
            - run:
                  name: Set Sentry
                  command: echo {\"dsn\":\"${SENTRY_DSN}\"} > src/main/assets/data/sentry.json
            - run:
                  name: Build App
                  command: yarn dist --publish=never
            - persist_to_workspace:
                  root: .
                  paths:
                      - dist
            - store_artifacts:
                  path: dist

    'build-linux':
        docker: *DOCKERIMAGE
        steps:
            - checkout
            - attach_workspace:
                  at: /tmp/linux
            - restore_cache:
                  name: Restore Yarn Package Cache
                  keys:
                      - yarn-packages-{{ .Branch }}-{{ checksum "yarn.lock" }}
                      - yarn-packages-{{ .Branch }}
                      - yarn-packages-master
                      - yarn-packages-
            - run:
                  name: Install OS Dependecies
                  command: |
                      sudo apt-get update
                      sudo apt-get install libudev-dev
                      sudo apt-get install libusb-1.0-0 libusb-1.0-0-dev libudev-dev
            - run:
                  name: Install Gulp
                  command: sudo npm i -g gulp-cli
            - run:
                  name: Install Node Packages
                  command: yarn
            - save_cache:
                  name: Save Yarn Package Cache
                  key: yarn-packages-{{ .Branch }}-{{ checksum "yarn.lock" }}
                  paths:
                      - node_modules/
            - run:
                  name: Set Sentry
                  command: echo {\"dsn\":\"${SENTRY_DSN}\"} > src/main/assets/data/sentry.json
            - run:
                  name: Build App
                  command: yarn dist --publish=never
            - persist_to_workspace:
                  root: .
                  paths:
                      - dist
            - store_artifacts:
                  path: dist
    'e2e-mac':
        macos:
            xcode: '9.0'
        steps:
            - checkout
            - attach_workspace:
                  at: /tmp/mac
            - restore_cache:
                  name: Restore Yarn Package Cache
                  keys:
                      - yarn-packages-mac-{{ .Branch }}-{{ checksum "yarn.lock" }}
                      - yarn-packages-mac-{{ .Branch }}
                      - yarn-packages-mac-master
                      - yarn-packages-mac-
            - run:
                  name: Upgrade Node
                  command: brew upgrade node@8
            - run:
                  name: Upgrade Yarn
                  command: brew upgrade yarn
            - run:
                  name: Add Read Access to yarn config
                  command: |
                      sudo mkdir ~/.config
                      sudo chown -R $USER:$GROUP ~/.config
            - run:
                  name: E2E Tests
                  command: OSENV=circle-mac yarn test:e2e

    'stage-mac':
        docker: &GGLOUDIMAGE
            - image: google/cloud-sdk:latest
        steps:
            - checkout
            - attach_workspace:
                  at: /tmp/mac
            - run:
                  name: Deploy mac to staging
                  command: bash deploy.sh "$(git log --format=%B -n 1 $CIRCLE_SHA1)"
                  environment:
                      OSENV: mac

    'stage-linux':
        docker: &GGLOUDIMAGE
            - image: google/cloud-sdk:latest
        steps:
            - checkout
            - attach_workspace:
                  at: /tmp/linux
            - run:
                  name: Deploy linux to staging
                  command: bash deploy.sh "$(git log --format=%B -n 1 $CIRCLE_SHA1)"
                  environment:
                      OSENV: linux

    'publish-mac':
        macos:
            xcode: '9.0'
        steps:
            - checkout
            - attach_workspace:
                  at: /tmp/mac
            - restore_cache:
                  name: Restore Yarn Package Cache
                  keys:
                      - yarn-packages-mac-{{ .Branch }}-{{ checksum "yarn.lock" }}
                      - yarn-packages-mac-{{ .Branch }}
                      - yarn-packages-mac-master
                      - yarn-packages-mac-
            - run:
                  name: Upgrade Node
                  command: brew upgrade node@8
            - run:
                  name: Upgrade Yarn
                  command: brew upgrade yarn
            - run:
                  name: Add Read Access to yarn config
                  command: |
                      sudo mkdir ~/.config
                      sudo chown -R $USER:$GROUP ~/.config
            - run:
                  name: Install Gulp
                  command: sudo npm i -g gulp-cli
            - run:
                  name: Install Node Packages
                  command: yarn
            - run:
                  name: Set Sentry
                  command: echo {\"dsn\":\"${SENTRY_DSN}\"} > src/main/assets/data/sentry.json
            - run:
                  name: Publish App to Github
                  command: yarn publish-build

workflows:
    version: 2
    workflow1:
        jobs:
            - 'unit-test'
            - 'build-linux':
                  requires:
                      - unit-test
            - 'stage-linux':
                  requires:
                      - build-linux
                  filters:
                      branches:
                          only:
                              - dev
                              - release
            - 'build-mac':
                  requires:
                      - unit-test
            - 'e2e-mac':
                  requires:
                      - build-mac
            - 'stage-mac':
                  requires:
                      - e2e-mac
                  filters:
                      branches:
                          only:
                              - dev
                              - release
            - 'publish-mac':
                  requires:
                      - stage-mac
                  filters:
                      branches:
                          only:
                              - master
